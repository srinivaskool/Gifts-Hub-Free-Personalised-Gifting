{"version":3,"sources":["Magazine/Magazine.js","ScheduledLivePages/ScheduledLiveMagazine.js"],"names":["App","text","name","fbimg","BDate","today","Date","getFullYear","getMonth","getDate","className","style","backgroundImage","textAlign","toLocaleDateString","width","marginTop","src","alt","marginLeft","marginRight","display","justifyContent","float","overflow","borderBottom","paddingBottom","ScheduledLiveMagazine","match","dispatch","useDispatch","database","firebase","firestore","useState","setfbimg","settext","setname","Livelinks","setLivelinks","loading","setloading","dataurl","settoday","a","collection","doc","params","slug","get","snapshot","data","array_data","map","item","index","id","type","payload","day","url","useEffect","getDoc","console","log","ref","once","then","img","val","calculateTimeLeft","difference","Bday_date","length","timeLeft","days","Math","floor","hours","minutes","seconds","setTimeLeft","setTimeout","timerComponents","Object","keys","forEach","interval","push","backgroundColor","class","color","height","Bday"],"mappings":"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","file":"static/js/74.bdf30746.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Magazine.css\";\r\nexport default function App({ text, name, fbimg, BDate }) {\r\n  var today = new Date();\r\n  var date =\r\n    today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <center>\r\n          <div\r\n            className=\"magazineMaindiv\"\r\n            style={{\r\n              backgroundImage: \"url(\" + fbimg + \")\",\r\n            }}\r\n          >\r\n            <div style={{ textAlign: \"right\" }}>\r\n              {\" \"}\r\n              <p className=\"magazineDate\">\r\n                {new Date(BDate).toLocaleDateString(\"en-US\")}\r\n              </p>\r\n            </div>\r\n\r\n            <img\r\n              style={{ width: \"85%\", marginTop: \"2%\" }}\r\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b3/Time_Magazine_logo.svg/1280px-Time_Magazine_logo.svg.png\"\r\n              alt=\"time\"\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginLeft: \"2%\",\r\n                marginRight: \"2%\",\r\n                marginTop: \"20%\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  float: \"left\",\r\n                  textAlign: \"left\",\r\n                  width: \"45%\",\r\n                  overflow: \"hidden\",\r\n                }}\r\n              >\r\n                <h1\r\n                  className=\"magazineText\"\r\n                  style={{ borderBottom: \"0\", paddingBottom: \"0\" }}\r\n                >\r\n                  THE\r\n                </h1>\r\n                <h1 className=\"magazineText\">{text}</h1>\r\n                <h1 className=\"magazineName\">{name}</h1>\r\n              </div>\r\n              <div style={{ float: \"right\", textAlign: \"right\" }}>\r\n                <h1 className=\"magazineHot\">HOT</h1>\r\n                <h1 className=\"magazineBuzz\">BUZZ</h1>\r\n                <img\r\n                  className=\"magazineBarcode\"\r\n                  src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e9/UPC-A-036000291452.svg/1200px-UPC-A-036000291452.svg.png\"\r\n                  alt=\"time\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </center>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Magazine from \"../Magazine/Magazine\";\r\nimport firebase from \"../firebase\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport CircleTimer from \"./CircleTimer\";\r\nimport ScheduledLiveNavBar from \"../NavBars/ScheduledLiveNavBar\";\r\nfunction ScheduledLiveMagazine({ match }) {\r\n  let dispatch = useDispatch();\r\n  const database = firebase.firestore();\r\n  const [fbimg, setfbimg] = useState(\"\");\r\n  const [text, settext] = useState(\"\");\r\n  const [name, setname] = useState(\"\");\r\n  const [Livelinks, setLivelinks] = useState(\"\");\r\n  const [loading, setloading] = useState(true);\r\n  const [dataurl, setdataurl] = useState([]);\r\n  const [today, settoday] = useState();\r\n\r\n  async function getDoc() {\r\n    const snapshot = await database\r\n      .collection(\"Livelinks\")\r\n      .doc(match.params.slug)\r\n      .get();\r\n\r\n    const data = snapshot.data();\r\n    setLivelinks(data);\r\n    data.array_data.map((item, index) => {\r\n      if (item.id == \"magazine\") {\r\n        settoday(index);\r\n        dispatch({\r\n          type: \"ACTIVE_STEP\",\r\n          payload: { day: index + 1 },\r\n        });\r\n      }\r\n      dataurl[index] = item.url;\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    getDoc();\r\n    console.log(Livelinks, \"liveData\");\r\n    console.log(match.params.slug, \"slug\", match.params.id, \"id\");\r\n  }, []);\r\n  useEffect(() => {\r\n    setloading(true);\r\n    const todoRef = firebase\r\n      .database()\r\n      .ref(\"/Magazine/\" + match.params.id)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        var img = snapshot.val().url;\r\n        setfbimg(img);\r\n        var text = snapshot.val().text;\r\n        settext(text);\r\n        var name = snapshot.val().name;\r\n        setname(name);\r\n      });\r\n    setloading(false);\r\n  }, []);\r\n\r\n  const calculateTimeLeft = () => {\r\n    let year = new Date().getFullYear();\r\n    var difference =\r\n      +new Date(Livelinks.Bday_date) -\r\n      +new Date() -\r\n      19800000 -\r\n      86400000 * (dataurl.length - today);\r\n    console.log(difference, \"difference\");\r\n    let timeLeft = {};\r\n\r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        minutes: Math.floor((difference / 1000 / 60) % 60),\r\n        seconds: Math.floor((difference / 1000) % 60),\r\n      };\r\n    }\r\n\r\n    return timeLeft;\r\n  };\r\n\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n    }, 1000);\r\n  });\r\n  const timerComponents = [];\r\n\r\n  Object.keys(timeLeft).forEach((interval) => {\r\n    if (!timeLeft[interval]) {\r\n      return;\r\n    }\r\n\r\n    timerComponents.push(\r\n      <span>\r\n        {timeLeft[interval]} {interval}{\" \"}\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ScheduledLiveNavBar slug={match.params.slug} />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div style={{ backgroundColor: \"#70cff3\" }} class=\"container-fluid pt-2\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-12 \">\r\n            {loading ? (\r\n              <Loader\r\n                type=\"BallTriangle\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n              />\r\n            ) : (\r\n              <div>\r\n                {new Date(Livelinks.Bday_date) -\r\n                  +new Date() -\r\n                  19800000 -\r\n                  86400000 * (dataurl.length - today - 1) >\r\n                0 ? (\r\n                  <div>\r\n                    <h5 className=\"example\"> This Gift opens in </h5>\r\n                    <CircleTimer\r\n                      Bday={\r\n                        +new Date(Livelinks.Bday_date) -\r\n                        +new Date() -\r\n                        19800000 -\r\n                        86400000 * (dataurl.length - today - 1)\r\n                      }\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"mb-5\">\r\n                    <center>\r\n                      {\" \"}\r\n                      {dataurl.length - today - 1 == 0 ? (\r\n                        <h1 className=\"example\">The Big day is here !!!</h1>\r\n                      ) : dataurl.length - today - 1 == 1 ? (\r\n                        <h1 className=\"example\">\r\n                          {dataurl.length - today - 1} day to go !!!\r\n                        </h1>\r\n                      ) : (\r\n                        <h1 className=\"example\">\r\n                          {dataurl.length - today - 1} days to go !!!\r\n                        </h1>\r\n                      )}\r\n                    </center>\r\n                    <Magazine\r\n                      fbimg={fbimg}\r\n                      text={text}\r\n                      name={name}\r\n                      //   startDate={BDate}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScheduledLiveMagazine;\r\n"],"sourceRoot":""}