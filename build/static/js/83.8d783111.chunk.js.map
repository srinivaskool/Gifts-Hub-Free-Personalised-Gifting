{"version":3,"sources":["ScheduledLivePages/ScheduledLiveAboutQuiz.js"],"names":["ScheduledLiveAboutQuiz","match","database","firebase","firestore","dispatch","useDispatch","useState","today","settoday","fbimg","setfbimg","quesArray","setquesArray","answersArray","setanswersArray","Livelinks","setLivelinks","loading","setloading","dataurl","getDoc","a","collection","doc","params","slug","get","snapshot","data","array_data","map","item","index","id","type","payload","day","url","useEffect","ref","once","then","img","val","calculateTimeLeft","Date","getFullYear","difference","Bday_date","length","console","log","timeLeft","days","Math","floor","hours","minutes","seconds","setTimeLeft","setTimeout","timerComponents","Object","keys","forEach","interval","push","style","backgroundColor","height","color","width","className","Bday"],"mappings":"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","file":"static/js/83.8d783111.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport LiveQuestionCard from \"../AboutQuiz/LiveQuestionCard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport firebase from \"../firebase\";\r\nimport ScheduledLiveNavBar from \"../NavBars/ScheduledLiveNavBar\";\r\nimport CircleTimer from \"./CircleTimer\";\r\nexport default function ScheduledLiveAboutQuiz({ match }) {\r\n  const database = firebase.firestore();\r\n\r\n  let dispatch = useDispatch();\r\n  const [today, settoday] = useState();\r\n  const [fbimg, setfbimg] = useState(\"\");\r\n  const [quesArray, setquesArray] = useState([]);\r\n  const [answersArray, setanswersArray] = useState([]);\r\n  const [Livelinks, setLivelinks] = useState(\"\");\r\n  const [loading, setloading] = useState(true);\r\n  const [dataurl, setdataurl] = useState([]);\r\n\r\n  async function getDoc() {\r\n    setloading(true);\r\n    const snapshot = await database\r\n      .collection(\"Livelinks\")\r\n      .doc(match.params.slug)\r\n      .get();\r\n    const data = snapshot.data();\r\n    setLivelinks(data);\r\n    data.array_data.map((item, index) => {\r\n      if (item.id == \"aboutquiz\") {\r\n        settoday(index);\r\n        dispatch({\r\n          type: \"ACTIVE_STEP\",\r\n          payload: { day: index + 1 },\r\n        });\r\n      }\r\n      dataurl[index] = item.url;\r\n    });\r\n  }\r\n  useEffect(async () => {\r\n    await getDoc();\r\n    // setloading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setloading(true);\r\n    const todoRef = firebase\r\n      .database()\r\n      .ref(\"/AboutQuiz/\" + match.params.id)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        var img = snapshot.val().url;\r\n        setfbimg(img);\r\n        var quesArray = snapshot.val().quesArray;\r\n        setquesArray(quesArray);\r\n        var answersArray = snapshot.val().answersArray;\r\n        setanswersArray(answersArray);\r\n        setloading(false);\r\n      });\r\n  }, []);\r\n\r\n  const calculateTimeLeft = () => {\r\n    let year = new Date().getFullYear();\r\n    var difference =\r\n      +new Date(Livelinks.Bday_date) -\r\n      +new Date() -\r\n      19800000 -\r\n      86400000 * (dataurl.length - today);\r\n    console.log(difference, \"difference\");\r\n    let timeLeft = {};\r\n\r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        minutes: Math.floor((difference / 1000 / 60) % 60),\r\n        seconds: Math.floor((difference / 1000) % 60),\r\n      };\r\n    }\r\n\r\n    return timeLeft;\r\n  };\r\n\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n    }, 1000);\r\n  });\r\n  const timerComponents = [];\r\n\r\n  Object.keys(timeLeft).forEach((interval) => {\r\n    if (!timeLeft[interval]) {\r\n      return;\r\n    }\r\n\r\n    timerComponents.push(\r\n      <span>\r\n        {timeLeft[interval]} {interval}{\" \"}\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#70cff3\", height: \"100vh\" }}>\r\n      <ScheduledLiveNavBar slug={match.params.slug} />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div style={{ backgroundColor: \"#70cff3\" }}>\r\n        {loading ? (\r\n          <Loader\r\n            type=\"BallTriangle\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        ) : (\r\n          <div>\r\n            {new Date(Livelinks.Bday_date) -\r\n              +new Date() -\r\n              19800000 -\r\n              86400000 * (dataurl.length - today - 1) >\r\n            0 ? (\r\n              <div>\r\n                <h5 className=\"example\"> This Gift opens in </h5>\r\n                <CircleTimer\r\n                  Bday={\r\n                    +new Date(Livelinks.Bday_date) -\r\n                    +new Date() -\r\n                    19800000 -\r\n                    86400000 * (dataurl.length - today - 1)\r\n                  }\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <center>\r\n                  {\" \"}\r\n                  {dataurl.length - today - 1 == 0 ? (\r\n                    <h1 className=\"example\">The Big day is here !!!</h1>\r\n                  ) : dataurl.length - today - 1 == 1 ? (\r\n                    <h1 className=\"example\">\r\n                      {dataurl.length - today - 1} day to go !!!\r\n                    </h1>\r\n                  ) : (\r\n                    <h1 className=\"example\">\r\n                      {dataurl.length - today - 1} days to go !!!\r\n                    </h1>\r\n                  )}\r\n                </center>\r\n                {console.log(quesArray, \"quesarray\")}\r\n                {console.log(answersArray, \"answerArray\")}\r\n                <LiveQuestionCard\r\n                  quesArray={quesArray}\r\n                  answersArray={answersArray}\r\n                  fbimg={fbimg}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}